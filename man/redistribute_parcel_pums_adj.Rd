% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redistribute_parcel_pums_adj.R
\name{redistribute_parcel_pums_adj}
\alias{redistribute_parcel_pums_adj}
\title{Method: Proportional, resident-estimate-adjusted parcel unit counts}
\usage{
redistribute_parcel_pums_adj(source, target, households,
  target_total = "Total_Units", target_indicator = "Unit_Type",
  households_size = "size", households_indicator = "BLD",
  households_id = "SERIALNO", person = NULL,
  person_household_id = "SERIALNO", ...)
}
\arguments{
\item{source, target}{Source and target of \code{\link{redistribute}}.}

\item{households}{PUMS household data. Can be a list with \code{household} and \code{person}
entries, like that returned from \code{\link{download_census_pums}}.}

\item{target_total}{Column name in \code{target} (e.g., parcel data; or equivalent vector)
containing the unit count}

\item{target_indicator}{Column name of a logical variable in \code{target} (or equivalent vector)
to use to assign adjustment values, where \code{TRUE} indicates a single family home.
If the values of the column are characters, anything not matching \code{"MULTI"} will be \code{TRUE}.}

\item{households_size}{A vector of household sizes, or a column in \code{households} containing
such values. If this is not specified or found, \code{person} will be used to calculate
household size, based on \code{hosuehold_id} and \code{person_household_id}.}

\item{households_indicator}{Same a \code{target_indicator}, but in \code{households}, or
a vector (or column name) of BLD codes, where either \code{"02"} or \code{"03"} would be \code{TRUE}.}

\item{households_id}{A vector of household IDs aligning with \code{households},
or a column name in \code{households} containing such IDs.
Only used to calculate \code{households_size} if necessary.}

\item{person}{PUMS person data. Only used to calculate \code{households_size} if necessary.}

\item{person_household_id}{A vector of household IDs aligning with \code{person},
or a column name in \code{person} containing such IDs.
Only used to calculate \code{households_size} if necessary.}

\item{...}{Additional arguments to pass to \code{\link{redistribute}}. You will likely need
to specify a \code{map}, and potentially \code{source_id} and/or \code{target_id}.}
}
\value{
Result of \code{\link{redistribute}}. These are assumed to be parcel-level
estimates, which could then be aggregated to make higher-level estimates.
}
\description{
A wrapper around the \code{\link{redistribute}} function, that
takes PUMS data as additional input, and uses it to calculates an adjusted weight for
redistribution to parcel data.
}
\details{
It is assumed that initial weights are unit counts, and these are to be adjusted
based on PUMS household data.
}
\examples{
\dontrun{
if (require("tidycensus")) {
  # download source, target, and household data
  tracts <- tidycensus::get_acs(
    year = 2021,
    state = "51",
    county = "013",
    geography = "tract",
    output = "wide",
    variables = c(total = "B01001_001"),
    geometry = TRUE
  )
  parcels <- sf::st_read(paste0(
    "https://arlgis.arlingtonva.us/arcgis/rest/",
    "services/Open_Data/od_MHUD_Polygons/",
    "FeatureServer/0/query?where=1=1&outFields=*&outSR=4326&f=json"
  ))
  pums <- download_census_pums(tempdir(), "51", geoids = tracts$GEOID)

  # calculate map between source and target
  map_tr_to_parcel <- redistribute(
    tracts, parcels,
    target_id = "OBJECTID", return_map = TRUE
  )

  # redistribute tract-level summaries to parcels,
  # using a resident-estimate-adjusted weight
  parcels_filled <- redistribute_parcel_pums_adj(
    tracts[, -2], parcels, pums,
    target_total = "Total_Units", map = map_tr_to_parcel, target_id = "OBJECTID"
  )

  # this can also be calculated with the underlying function

  ## calculate resident estimates
  household_size <- tapply(
    table(pums$person$SERIALNO)[pums$household$SERIALNO],
    pums$household$BLD \%in\% c("02", "03"),
    mean,
    na.rm = TRUE
  )
  residents <- parcels$Total * household_size[
    as.character(parcels$Unit_Type != "MULTI")
  ]

  ## supply as weights
  parcels_filled_manual <- redistribute(
    tracts[, -2], parcels, map_tr_to_parcel,
    target_id = "OBJECTID", weight = residents
  )

  # either way, you could now use the result to make estimates
  # at higher-level geographies by redistributing from the
  # parcel-level estimates to the new target
}
}
}
